swagger: '2.0'
info:
  description: >-
    API para gestão de um Sistema de Usuários de Carros
  version: 1.0.0
  title: carusersystem
  contact:
    email: dieggopsc@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
# host: com.desafio.carusersystem
# basePath: /
tags:
  - name: usuario
    description: Operações de Usuários
  - name: carros
    description: Operações de Carros
paths:
  /signin:
    post:
      tags:
        - usuario
      summary: realiza autenticação de usuário
      description: Esta rota espera um objeto com os campos login e password, e deve retornar o token de acesso da API (JWT) com as informações do usuário logado.
      operationId: logarUsuario
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login object
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UsuarioLoginResponse'
        '404':
          description: Invalid login or password
  /users:
    get:
      tags:
        - usuario
      summary: listar usuários
      description: Listar todos os usuários
      operationId: listarUsuarios
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UsuarioResponse'
    post:
      tags:
        - usuario
      summary: Cadastrar um novo usuário
      description: Cadastrar um novo usuário
      operationId: cadastrarUsuario
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: usuario object
          required: true
          schema:
            $ref: '#/definitions/Usuario'
      responses:
        '204':
          description: successful operation
        '403':
          description: Unauthorized/invalid session
        '409':
          description: Invalid fields/Missing fields
  /users/{id}:
    get:
      tags:
        - usuario
      summary: Buscar um usuário pelo id
      description: Buscar um usuário pelo id
      operationId: recuperaUsuario
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID é necessário para recuperação de dados cadastrais
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Usuario'
        '404':
          description: usuário não existe
    delete:
      tags:
        - usuario
      summary: remover um usuário pelo id
      description: remover um usuário pelo id
      operationId: removeUsuario
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID é necessário para recuperação de dados cadastrais
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: usuário não existe
    put:
      tags:
        - usuario
      summary: atualiza um usuário pelo id
      description: atualiza um usuário pelo id
      operationId: atualizaUsuario
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID é necessário para recuperação de dados cadastrais
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Usuario object
          required: true
          schema:
            $ref: '#/definitions/Usuario'
      responses:
        '200':
          description: successful operation
        '404':
          description: usuário não existe
  /me:
    get:
      tags:
        - carros
      summary: dados do usuário logado
      description: Recupera informações do usuário logado e seus carros
      operationId: dadosUsuario
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UsuarioMe'
  /cars:
    get:
      tags:
        - carros
      summary: listar carros
      description: Listar todos os carros dos usuários
      operationId: listarCarros
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CarsResponse'
    post:
      tags:
        - carros
      summary: Cadastrar um novo carro
      description: Cadastrar um novo carro
      operationId: cadastrarCarro
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: carro object
          required: true
          schema:
            $ref: '#/definitions/Cars'
      responses:
        '204':
          description: successful operation
        '403':
          description: Unauthorized/invalid session
        '409':
          description: Invalid fields/Missing fields
  /cars/{id}:
    get:
      tags:
        - carro
      summary: Buscar um carro pelo id
      description: Buscar um carro pelo id
      operationId: recuperaCarro
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID é necessário para recuperação de dados cadastrais
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Cars'
        '404':
          description: carro não existe
    delete:
      tags:
        - carros
      summary: remover um carro pelo id
      description: remover um carro pelo id
      operationId: removeCarro
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID é necessário para recuperação de dados cadastrais
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: carro não existe
    put:
      tags:
        - carros
      summary: atualiza um carro pelo id
      description: atualiza um carro pelo id
      operationId: atualizaCarro
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID é necessário para recuperação de dados cadastrais
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Carro object
          required: true
          schema:
            $ref: '#/definitions/Cars'
      responses:
        '200':
          description: successful operation
        '404':
          description: carro não existe
definitions:
  UserLogin:
    type: object
    properties:
      login:
        type: string
      password:
        type: string
  UsuarioResponse:
    type: object
    properties:
      usuarios:
        type: array
        items:
          $ref: '#/definitions/Usuario'
  UsuarioAtualiza:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      birthday:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
  Usuario:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      birthday:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      createdAt:
        type: string
      lastLogin:
        type: string
      cars:
        type: array
        items:
          $ref: '#/definitions/Cars'
  UsuarioMe:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      birthday:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      createdAt:
        type: string
      lastLogin:
        type: string
      cars:
        type: array
        items:
          $ref: '#/definitions/Cars'
  Cars:
    type: object
    properties:
      id:
        type: integer
        format: int64
      year:
        type: integer
        format: int64
      licensePlate:
        type: string
      model:
        type: string
      color:
        type: string
      count:
        type: integer
        format: int64
  UsuarioLoginResponse:
    type: object
    properties:
      token:
        type: string
  CarsResponse:
    type: object
    properties:
      carros:
        type: array
        items:
          $ref: '#/definitions/Cars'
externalDocs:
  description: ApiSwagger
  url: 'https://app.swaggerhub.com/apis/dieggop/CarUserSystem/1.0.0'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /dieggop/CarUserSystem/1.0.0
schemes:
  - https